library(tmap)
library(dplyr)
library(grid)
# Step 1: Select Portage and Summit counties
selected.county <- counties %>% filter(NAME %in% c("Portage", "Summit"))
# Step 2: Reproject the DEM to match the CRS of counties
neoh_dem.projected <- terra::project(neoh_dem, st_crs(counties)$wkt)
# Step 3: Crop the DEM to only include Portage and Summit area
dem.counties <- terra::crop(neoh_dem.projected, vect(selected.county))
# Step 4: Align CRS and clip parks to selected counties
parks.aligned <- st_transform(parks, st_crs(selected.county))
parks.selected <- st_intersection(parks.aligned, selected.county)
# Step 5: Create the main map
map_main <- tm_shape(dem.counties) +
tm_raster(style = "cont", palette = terrain.colors(10),
alpha = 0.5,
col.legend = tm_legend(title = "Elevation")) +
tm_shape(selected.county) +
tm_borders(col = "black", lwd = 1.5) +
tm_fill(col = "gray90", alpha = 0.4) +
tm_shape(parks.selected) +
tm_polygons(fill = "FEATTYPE",
fill.scale = tm_scale(values = "brewer.greens"),
fill.legend = tm_legend(title = "Park Type")) +
tm_layout(
title = "Parks and Elevation of Portage & Summit Counties",
title.size = 1.2,
title.position = c("center", "top"),
legend.position = c("left", "top")
) +
tm_scalebar(breaks = c(0, 25, 50, 75, 100), text.size = 0.8, position = c("left", "bottom")) +
tm_compass(position = c("right", "top"), size = 2)
# To view the map:
tmap_mode("plot")
map_main
# Step 1: Select Portage and Summit counties
selected.county <- counties %>% filter(NAME %in% c("Portage", "Summit"))
# Step 2: Reproject the DEM to match the CRS of counties
neoh_dem.projected <- terra::project(neoh_dem, st_crs(counties)$wkt)
# Step 3: Crop the DEM to only include Portage and Summit area
dem.counties <- terra::crop(neoh_dem.projected, vect(selected.county))
# Step 4: Align CRS and clip parks to selected counties
parks.aligned <- st_transform(parks, st_crs(selected.county))
parks.selected <- st_intersection(parks.aligned, selected.county)
# Step 5: Create the main map
map_main <- tm_shape(dem.counties) +
tm_raster(style = "cont", palette = terrain.colors(10),
alpha = 0.5,
col.legend = tm_legend(title = "Elevation")) +
tm_shape(selected.county) +
tm_borders(col = "black", lwd = 1.5) +
tm_fill(col = "gray90", alpha = 0.4) +
tm_shape(parks.selected) +
tm_polygons(fill = "FEATTYPE",
fill.scale = tm_scale(values = "brewer.greens"),
fill.legend = tm_legend(title = "Park Type")) +
tm_layout(
title = "Parks and Elevation of Portage & Summit Counties",
title.size = 1.2,
title.position = c("center", "top"),
legend.position = c("left", "top")
) +
tm_scalebar(breaks = c(0, 25, 50, 75, 100), text.size = 0.8, position = c("left", "bottom"))
+
tm_compass(position = c("right", "top"), size = 2)
# Step 1: Filter Portage and Summit counties
selected.county <- counties %>% filter(NAME %in% c("Portage", "Summit"))
# Step 2: Reproject the DEM to match counties CRS
neoh_dem.projected <- terra::project(neoh_dem, st_crs(counties)$wkt)
# Step 3: Clip DEM to the selected counties
dem.counties <- terra::crop(neoh_dem.projected, vect(selected.county))
# Step 4: Align CRS and clip parks to selected counties
parks.aligned <- st_transform(parks, st_crs(selected.county))
parks.selected <- st_intersection(parks.aligned, selected.county)
# Step 5: Create the final main map
map_main <- tm_shape(dem.counties) +
tm_raster(style = "cont", palette = terrain.colors(10),
alpha = 0.5,
col.legend = tm_legend(title = "Elevation")) +
tm_shape(selected.county) +
tm_borders(col = "black", lwd = 1.5) +
tm_fill(col = "gray90", alpha = 0.4) +
tm_shape(parks.selected) +
tm_polygons(fill = "FEATTYPE",
fill.scale = tm_scale(values = "brewer.greens"),
fill.legend = tm_legend(title = "Park Type")) +
tm_compass(position = c("right", "top"), size = 2) +
tm_scalebar(breaks = c(0, 25, 50), text.size = 0.6, position = c("left", "bottom")) +
tm_layout(
title = "Parks and Elevation of Portage & Summit Counties",
title.size = 1.2,
title.position = c("center", "top"),
legend.position = c("left", "top")
)
# Step 6: Render the map
tmap_mode("plot")
map_main
# Step 1: Select only Portage and Summit counties
selected.county <- counties %>% filter(NAME %in% c("Portage", "Summit"))
# Step 2: Align park CRS and clip to selected counties
parks.aligned <- st_transform(parks, st_crs(selected.county))
parks.selected <- st_intersection(parks.aligned, selected.county)
# Step 3: Align place CRS and clip municipal boundaries
places.aligned <- st_transform(places, st_crs(selected.county))
places.selected <- st_intersection(places.aligned, selected.county)
# Step 4: Build the map layout
map_main <-
# Counties base layer
tm_shape(selected.county) +
tm_polygons(col = "gray90") +
# Municipal boundaries layer (in red)
tm_shape(places.selected) +
tm_polygons(col = "red", alpha = 0.6) +
tm_text("NAME", size = 0.6) +
# Parks clipped and shaded by type
tm_shape(parks.selected) +
tm_polygons(
fill = "FEATTYPE",
fill.scale = tm_scale(values = "brewer.greens"),
fill.legend = tm_legend(title = "Park Type")
) +
# Compass and scale bar
tm_compass(position = c("right", "top"), size = 2.2) +
tm_scalebar(position = c("left", "bottom"), breaks = c(0, 20, 40, 60), text.size = 0.6) +
# Layout styling
tm_layout(
title = "Municipal Areas and Park Types in Portage & Summit Counties",
title.size = 1.4,
title.position = c("center", "top"),
legend.outside = TRUE,
legend.outside.position = "right",
legend.title.size = 1,
legend.text.size = 0.8,
frame = FALSE
)
# View the map
tmap_mode("plot")
map_main
# Step 1: Select only Portage and Summit counties
selected.county <- counties %>% filter(NAME %in% c("Portage", "Summit"))
# Step 2: Align park CRS and clip to selected counties
parks.aligned <- st_transform(parks, st_crs(selected.county))
parks.selected <- st_intersection(parks.aligned, selected.county)
# Step 3: Align place CRS and clip municipal boundaries
places.aligned <- st_transform(places, st_crs(selected.county))
places.selected <- st_intersection(places.aligned, selected.county)
# Step 4: Build the final clean map
map_main <-
tm_shape(selected.county) +
tm_polygons(col = "gray90") +
tm_shape(places.selected) +
tm_polygons(col = "red", alpha = 0.6) +
tm_text("NAME", size = 0.6) +
tm_shape(parks.selected) +
tm_polygons(
fill = "FEATTYPE",
fill.scale = tm_scale(values = "brewer.greens"),
fill.legend = tm_legend(title = "Park Type")
) +
tm_compass(position = c("right", "top"), size = 2.2) +
# ✅ Scale bar adjusted to remove warning
tm_scalebar(
position = c("left", "bottom"),
breaks = c(0, 30, 60),      # Fewer breaks
text.size = 0.5             # Smaller font
) +
tm_layout(
title = "Municipal Areas and Park Types in Portage & Summit Counties",
title.size = 1.4,
title.position = c("center", "top"),
legend.outside = TRUE,
legend.outside.position = "right",
legend.title.size = 1,
legend.text.size = 0.8,
frame = FALSE
)
# View the final map
tmap_mode("plot")
map_main
# Step 1: Select only Portage and Summit counties
selected.county <- counties %>% filter(NAME %in% c("Portage", "Summit"))
# Step 2: Align park CRS and clip to selected counties
parks.aligned <- st_transform(parks, st_crs(selected.county))
parks.selected <- st_intersection(parks.aligned, selected.county)
# Step 3: Align place CRS and clip municipal boundaries
places.aligned <- st_transform(places, st_crs(selected.county))
places.selected <- st_intersection(places.aligned, selected.county)
# Step 4: Final map with warning-free scalebar
map_main <-
tm_shape(selected.county) +
tm_polygons(col = "gray90") +
tm_shape(places.selected) +
tm_polygons(col = "red", alpha = 0.6) +
tm_text("NAME", size = 0.6) +
tm_shape(parks.selected) +
tm_polygons(
fill = "FEATTYPE",
fill.scale = tm_scale(values = "brewer.greens"),
fill.legend = tm_legend(title = "Park Type")
) +
tm_compass(position = c("right", "top"), size = 2.2) +
# ✅ FIXED scale bar: reduce breaks, shrink font, and increase width
tm_scalebar(
breaks = c(0, 30, 60),
text.size = 0.5,
position = c("left", "bottom"),
width = 0.3   # scale bar width as fraction of map width (0.3 = 30%)
) +
tm_layout(
title = "Municipal Areas and Park Types in Portage & Summit Counties",
title.size = 1.4,
title.position = c("center", "top"),
legend.outside = TRUE,
legend.outside.position = "right",
legend.title.size = 1,
legend.text.size = 0.8,
frame = FALSE
)
# Render the map
tmap_mode("plot")
map_main
# Step 1: Select only Portage and Summit counties
selected.county <- counties %>% filter(NAME %in% c("Portage", "Summit"))
# Step 2: Align park CRS and clip to selected counties
parks.aligned <- st_transform(parks, st_crs(selected.county))
parks.selected <- st_intersection(parks.aligned, selected.county)
# Step 3: Align place CRS and clip municipal boundaries
places.aligned <- st_transform(places, st_crs(selected.county))
places.selected <- st_intersection(places.aligned, selected.county)
# Step 4: Final map with warning-free scalebar
map_main <-
tm_shape(selected.county) +
tm_polygons(col = "gray90") +
tm_shape(places.selected) +
tm_polygons(col = "red", alpha = 0.6) +
tm_text("NAME", size = 0.6) +
tm_shape(parks.selected) +
tm_polygons(
fill = "FEATTYPE",
fill.scale = tm_scale(values = "brewer.greens"),
fill.legend = tm_legend(title = "Park Type")
) +
tm_compass(position = c("right", "top"), size = 2.2) +
# ✅ Warning-free scale bar using only width and text.size
tm_scalebar(
position = c("left", "bottom"),
width = 0.25,
text.size = 0.5
) +
tm_layout(
title = "Municipal Areas and Park Types in Portage & Summit Counties",
title.size = 1.4,
title.position = c("center", "top"),
legend.outside = TRUE,
legend.outside.position = "right",
legend.title.size = 1,
legend.text.size = 0.8,
frame = FALSE
)
# Step 1: Select only Portage and Summit counties
selected.county <- counties %>% filter(NAME %in% c("Portage", "Summit"))
# Step 2: Align park CRS and clip to selected counties
parks.aligned <- st_transform(parks, st_crs(selected.county))
parks.selected <- st_intersection(parks.aligned, selected.county)
# Step 3: Align place CRS and clip municipal boundaries
places.aligned <- st_transform(places, st_crs(selected.county))
places.selected <- st_intersection(places.aligned, selected.county)
# Step 4: Final map with warning-free scalebar
map_main <-
tm_shape(selected.county) +
tm_polygons(col = "gray90") +
tm_shape(places.selected) +
tm_polygons(col = "red", alpha = 0.6) +
tm_text("NAME", size = 0.6) +
tm_shape(parks.selected) +
tm_polygons(
fill = "FEATTYPE",
fill.scale = tm_scale(values = "brewer.greens"),
fill.legend = tm_legend(title = "Park Type")
) +
tm_compass(position = c("right", "top"), size = 2.2) +
# ✅ FIXED scale bar: reduce breaks, shrink font, and increase width
tm_scalebar(
breaks = c(0, 30, 60),
text.size = 0.5,
position = c("left", "bottom"),
width = 0.3   # scale bar width as fraction of map width (0.3 = 30%)
) +
tm_layout(
title = "Municipal Areas and Park Types in Portage & Summit Counties",
title.size = 1.4,
title.position = c("center", "top"),
legend.outside = TRUE,
legend.outside.position = "right",
legend.title.size = 1,
legend.text.size = 0.8,
frame = FALSE
)
# Render the map
tmap_mode("plot")
map_main
# Load necessary libraries
library(sf)
library(terra)
library(tmap)
library(dplyr)
library(grid)
# Step 1: Select only Portage and Summit counties
selected.county <- counties %>% filter(NAME %in% c("Portage", "Summit"))
# Step 2: Align park CRS and clip to selected counties
parks.aligned <- st_transform(parks, st_crs(selected.county))
parks.selected <- st_intersection(parks.aligned, selected.county)
# Step 3: Align place CRS and clip municipal boundaries
places.aligned <- st_transform(places, st_crs(selected.county))
places.selected <- st_intersection(places.aligned, selected.county)
# Step 4: Build the map layout
map_main <-
# Counties base layer
tm_shape(selected.county) +
tm_polygons(col = "gray90") +
# Municipal boundaries layer (in red)
tm_shape(places.selected) +
tm_polygons(col = "red", alpha = 0.6) +
tm_text("NAME", size = 0.6) +
# Parks clipped and shaded by type
tm_shape(parks.selected) +
tm_polygons(
fill = "FEATTYPE",
fill.scale = tm_scale(values = "brewer.greens"),
fill.legend = tm_legend(title = "Park Type")
) +
# Compass and scale bar
tm_compass(position = c("right", "top"), size = 2.2) +
tm_scalebar(position = c("left", "bottom"), breaks = c(0, 20, 40, 60), text.size = 0.6) +
# Layout styling
tm_layout(
title = "Municipal Areas and Park Types in Portage & Summit Counties",
title.size = 1.4,
title.position = c("center", "top"),
legend.outside = TRUE,
legend.outside.position = "right",
legend.title.size = 1,
legend.text.size = 0.8,
frame = FALSE
)
# View the map
tmap_mode("plot")
map_main
# Step 1: Select only Portage and Summit counties
selected.county <- counties %>% filter(NAME %in% c("Portage", "Summit"))
# Step 2: Align park CRS and clip to selected counties
parks.aligned <- st_transform(parks, st_crs(selected.county))
parks.selected <- st_intersection(parks.aligned, selected.county)
# Step 3: Align place CRS and clip municipal boundaries
places.aligned <- st_transform(places, st_crs(selected.county))
places.selected <- st_intersection(places.aligned, selected.county)
# Step 4: Build the map layout
map_main <-
# Counties base layer
tm_shape(selected.county) +
tm_polygons(col = "gray90") +
# Municipal boundaries layer (in red)
tm_shape(places.selected) +
tm_polygons(col = "red", alpha = 0.6) +
tm_text("NAME", size = 0.6) +
# Parks clipped and shaded by type
tm_shape(parks.selected) +
tm_polygons(
fill = "FEATTYPE",
fill.scale = tm_scale(values = "brewer.greens"),
fill.legend = tm_legend(title = "Park Type")
) +
# Compass and scale bar
tm_compass(position = c("right", "top"), size = 2.2) +
tm_scalebar(position = c("left", "bottom"), breaks = c(10, 30, 50, 70), text.size = 0.4) +
# Layout styling
tm_layout(
title = "Municipal Areas and Park Types in Portage & Summit Counties",
title.size = 1.4,
title.position = c("center", "top"),
legend.outside = TRUE,
legend.outside.position = "right",
legend.title.size = 1,
legend.text.size = 0.8,
frame = FALSE
)
# View the map
tmap_mode("plot")
map_main
# Step 1: Select only Portage and Summit counties
selected.county <- counties %>% filter(NAME %in% c("Portage", "Summit"))
# Step 2: Align park CRS and clip to selected counties
parks.aligned <- st_transform(parks, st_crs(selected.county))
parks.selected <- st_intersection(parks.aligned, selected.county)
# Step 3: Align place CRS and clip municipal boundaries
places.aligned <- st_transform(places, st_crs(selected.county))
places.selected <- st_intersection(places.aligned, selected.county)
# Step 4: Build the map layout
map_main <-
# Counties base layer
tm_shape(selected.county) +
tm_polygons(col = "gray90") +
# Municipal boundaries layer (in red)
tm_shape(places.selected) +
tm_polygons(col = "red", alpha = 0.6) +
tm_text("NAME", size = 0.6) +
# Parks clipped and shaded by type
tm_shape(parks.selected) +
tm_polygons(
fill = "FEATTYPE",
fill.scale = tm_scale(values = "brewer.greens"),
fill.legend = tm_legend(title = "Park Type")
) +
# Compass and scale bar
tm_compass(position = c("right", "top"), size = 2.2) +
tm_scalebar(position = c("left", "bottom"), breaks = c(0, 30, 50, 70), text.size = 0.3) +
# Layout styling
tm_layout(
title = "Municipal Areas and Park Types in Portage & Summit Counties",
title.size = 1.4,
title.position = c("center", "top"),
legend.outside = TRUE,
legend.outside.position = "right",
legend.title.size = 1,
legend.text.size = 0.8,
frame = FALSE
)
# View the map
tmap_mode("plot")
map_main
# Step 1: Select only Portage and Summit counties
selected.county <- counties %>% filter(NAME %in% c("Portage", "Summit"))
# Step 2: Align park CRS and clip to selected counties
parks.aligned <- st_transform(parks, st_crs(selected.county))
parks.selected <- st_intersection(parks.aligned, selected.county)
# Step 3: Align place CRS and clip municipal boundaries
places.aligned <- st_transform(places, st_crs(selected.county))
places.selected <- st_intersection(places.aligned, selected.county)
# Step 4: Build the map layout
map_main <-
# Counties base layer
tm_shape(selected.county) +
tm_polygons(col = "gray90") +
# Municipal boundaries layer (in red)
tm_shape(places.selected) +
tm_polygons(col = "red", alpha = 0.6) +
tm_text("NAME", size = 0.6) +
# Parks clipped and shaded by type
tm_shape(parks.selected) +
tm_polygons(
fill = "FEATTYPE",
fill.scale = tm_scale(values = "brewer.greens"),
fill.legend = tm_legend(title = "Park Type")
) +
# Compass and scale bar
tm_compass(position = c("right", "top"), size = 2.2) +
tm_scalebar(position = c("left", "bottom"), breaks = c(0, 50, 70, 90), text.size = 0.3) +
# Layout styling
tm_layout(
title = "Municipal Areas and Park Types in Portage & Summit Counties",
title.size = 1.4,
title.position = c("center", "top"),
legend.outside = TRUE,
legend.outside.position = "right",
legend.title.size = 1,
legend.text.size = 0.8,
frame = FALSE
)
# View the map
tmap_mode("plot")
map_main
# Step 1: Select only Portage and Summit counties
selected.county <- counties %>% filter(NAME %in% c("Portage", "Summit"))
# Step 2: Align park CRS and clip to selected counties
parks.aligned <- st_transform(parks, st_crs(selected.county))
parks.selected <- st_intersection(parks.aligned, selected.county)
# Step 3: Align place CRS and clip municipal boundaries
places.aligned <- st_transform(places, st_crs(selected.county))
places.selected <- st_intersection(places.aligned, selected.county)
# Step 4: Build the map layout
map_main <-
# Counties base layer
tm_shape(selected.county) +
tm_polygons(col = "gray90") +
# Municipal boundaries layer (in red)
tm_shape(places.selected) +
tm_polygons(col = "red", alpha = 0.6) +
tm_text("NAME", size = 0.6) +
# Parks clipped and shaded by type
tm_shape(parks.selected) +
tm_polygons(
fill = "FEATTYPE",
fill.scale = tm_scale(values = "brewer.greens"),
fill.legend = tm_legend(title = "Park Type")
) +
# Compass and scale bar
tm_compass(position = c("right", "top"), size = 2.2) +
tm_scalebar(position = c("left", "bottom"), breaks = c(0, 50, 70, 90), text.size = 0.1) +
# Layout styling
tm_layout(
title = "Municipal Areas and Park Types in Portage & Summit Counties",
title.size = 1.4,
title.position = c("center", "top"),
legend.outside = TRUE,
legend.outside.position = "right",
legend.title.size = 1,
legend.text.size = 0.8,
frame = FALSE
)
# View the map
tmap_mode("plot")
map_main
